{"version":3,"sources":["webpack:///../components/ui/Tab/Tab.tsx","webpack:///../components/ui/Tab/Tab.mdx"],"names":["TabContext","React","createContext","activeKey","handleChange","Tab","props","useState","currentKey","setKey","Provider","value","key","className","children","Item","useContext","classNames","tabKey","onClick","data-nick","title","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","of","__position","__code","__scope","Playground","Props","isMDXComponent"],"mappings":"gNAiBMA,EAAaC,IAAMC,cAA6B,CACpDC,UAAW,EACXC,aAAc,eAuBVC,EAA+B,SAACC,GAAyB,MAChCC,mBAASD,EAAMH,WAArCK,EADsD,KAC1CC,EAD0C,KAE7D,OACE,YAACT,EAAWU,SAAZ,CACEC,MAAO,CACLR,UAAWK,EACXJ,aAAc,SAACQ,GACbH,EAAOG,GACPN,EAAMF,aAAaQ,MAIvB,mBAAKC,UAAU,gBAAgBP,EAAMQ,YAI3CT,EAAIU,KA/BiC,SAACT,GAAwB,MACxBU,qBAAWhB,GAAvCG,EADoD,EACpDA,UAAWC,EADyC,EACzCA,aAEnB,OACE,mBACES,UAAWI,IAAW,UAAWX,EAAMY,SAAWf,GAAa,cAC/DgB,QAAS,WACPf,EAAaE,EAAMY,SAErBE,YAAWd,EAAMY,QAEjB,wBAAOZ,EAAMe,SAqBJhB,Q,8bCnDR,IAAMiB,EAAe,Q,0KAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGrB,E,oIACF,mBACD,OAAO,YAACkB,EAAD,KAAeD,EAAiBjB,EAAhC,CAAuCqB,WAAYA,EAAYC,QAAQ,cAI5E,iBAAQ,CACN,GAAM,OADR,OAGA,qCACA,iBAAQ,CACN,GAAM,aADR,aAGA,YAAC,IAAD,CAAOC,GAAIxB,EAAKuB,QAAQ,UACxB,iBAAQ,CACN,GAAM,iBADR,kBAGA,YAAC,IAAD,CAAOC,GAAIxB,EAAIU,KAAMa,QAAQ,UAC7B,iBAAQ,CACN,GAAM,QADR,QAGA,YAAC,IAAD,CAAYE,WAAY,EAAGC,OAAQ,4KAA2LC,QAAS,CACrO1B,QACAmB,kBACAQ,eACAC,UACA7B,OACCuB,QAAQ,cACZ,YAAC,EAAD,CAAKzB,UAAU,IAAIC,aAAc,SAAAQ,KAAWgB,QAAQ,OACxC,YAAC,EAAIb,KAAL,CAAUM,MAAM,MAAMH,OAAO,MAC7B,YAAC,EAAIH,KAAL,CAAUM,MAAM,MAAMH,OAAO,MAC7B,YAAC,EAAIH,KAAL,CAAUM,MAAM,MAAMH,OAAO,S,iKAO5CQ,EAAWS,gBAAiB","file":"component---components-ui-tab-tab-mdx-b6f21dd4451ebd224130.js","sourcesContent":["import React, { ReactNode, useContext, useState } from 'react';\nimport './index.less';\nimport classNames from 'classnames';\n\ninterface ITabInterface {\n  /**\n   * 当前选中的tab key\n   * @default 当前选中的tab key\n   */\n  activeKey: number | string;\n  /**\n   * tab切换时的回调函数\n   * @default tab切换时的回调函数\n   */\n  handleChange: (key: number | string) => void;\n  children?: ReactNode;\n}\nconst TabContext = React.createContext<ITabInterface>({\n  activeKey: 0,\n  handleChange: () => {}\n});\n\ninterface TabItemProps {\n  title: string;\n  tabKey: string | number;\n}\n\nconst Item: React.FC<TabItemProps> = (props: TabItemProps) => {\n  const { activeKey, handleChange } = useContext(TabContext);\n\n  return (\n    <div\n      className={classNames('god-tab', props.tabKey === activeKey && 'tab-active')}\n      onClick={() => {\n        handleChange(props.tabKey);\n      }}\n      data-nick={props.tabKey}\n    >\n      <span>{props.title}</span>\n    </div>\n  );\n};\nconst Tab: React.FC<ITabInterface> = (props: ITabInterface) => {\n  const [currentKey, setKey] = useState(props.activeKey);\n  return (\n    <TabContext.Provider\n      value={{\n        activeKey: currentKey,\n        handleChange: (key) => {\n          setKey(key);\n          props.handleChange(key);\n        }\n      }}\n    >\n      <div className=\"god-tabs-nav\">{props.children}</div>\n    </TabContext.Provider>\n  );\n};\nTab.Item = Item;\nexport default Tab;\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/liepin/work/fe/fe-msk-pc/v5/src/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport Tab from './Tab.tsx';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"tab\"\n    }}>{`Tab`}</h1>\n    <p>{`标签组，用于切换不同选项`}</p>\n    <h2 {...{\n      \"id\": \"tab-props\"\n    }}>{`Tab Props`}</h2>\n    <Props of={Tab} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"tabitem-props\"\n    }}>{`Tab.Item Props`}</h2>\n    <Props of={Tab.Item} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"基本使用\"\n    }}>{`基本使用`}</h2>\n    <Playground __position={2} __code={'<Tab activeKey=\\\"1\\\" handleChange={key => {}}>\\n  <Tab.Item title=\\\"未处理\\\" tabKey=\\\"1\\\" />\\n  <Tab.Item title=\\\"约面试\\\" tabKey=\\\"2\\\" />\\n  <Tab.Item title=\\\"已到场\\\" tabKey=\\\"3\\\" />\\n</Tab>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Tab\n    }} mdxType=\"Playground\">\n   <Tab activeKey='1' handleChange={key => {}} mdxType=\"Tab\">\n               <Tab.Item title=\"未处理\" tabKey='1' />\n               <Tab.Item title=\"约面试\" tabKey='2' />\n               <Tab.Item title=\"已到场\" tabKey='3' />\n             </Tab>\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}